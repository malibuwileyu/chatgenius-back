spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    url: jdbc:postgresql://${AWS_RDS_ENDPOINT}:5432/${AWS_RDS_DATABASE}
    username: ${AWS_RDS_USERNAME}
    password: ${AWS_RDS_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: never
      schema-locations: classpath:schema.sql
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000}

websocket:
  allowed-origins: ${WEBSOCKET_ALLOWED_ORIGINS:*}
  endpoint: /ws
  topic-prefix: /topic
  application-prefix: /app
  destination-prefix: /queue
  user-destination-prefix: /user
  heartbeat:
    incoming: 25000
    outgoing: 20000

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: always
    include-exception: true

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate: DEBUG
    com.chatgenius: DEBUG
    org.springframework.transaction: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics 